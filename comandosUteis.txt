#Abrir o programa
    python main.py

#instalar os requerimentos para que o projeto funcione
    pip install -r requirements.txt

#Ativar ambiente virtual
    .\venv3.10\Scripts\activate

#transforma o arquivo .ui do QT_Designer em um arquivo .py
    pyside2-uic interface.ui -o interface.py

#Gerar um executavel
    pip install pyinstaller

    --onefile: cria um √∫nico execut√°vel .exe (sem a pasta _internal vis√≠vel)
    --windowed: evita abrir o terminal junto com a interface (usado para apps com GUI como PySide2)
    --noconfirm: sobrescreve arquivos anteriores sem perguntar

    pyinstaller --noconfirm --windowed --onefile main.py


    pyinstaller --noconfirm --windowed main.py

    pyinstaller main.py --noconfirm --add-data "plugins;plugins" --add-data "core;core"    

#
    git status
    git add .
    git commit -m "teste" #adicionar uma descri√ß√£o da altera√ß√£o
    git push origin main    

#traz as altera√ß√µes feitas no main para a branch que esta usando.(precisa estar an branch auxiliar)
    git checkout modificar_services
    git fetch origin
    git rebase origin/main

# comandos GitHub
    üü° INICIALIZA√á√ÉO E CONFIGURA√á√ÉO
    Comando	Descri√ß√£o
        git init	                                    Cria um novo reposit√≥rio Git em um diret√≥rio local.
        git config --global user.name "Seu Nome"	    Define seu nome de usu√°rio para todos os reposit√≥rios.
        git config --global user.email "seu@email.com"	Define seu e-mail global para todos os reposit√≥rios.
        git config --list	                            Mostra as configura√ß√µes atuais do Git.

    üü¢ TRABALHANDO COM REPOSIT√ìRIOS
    Comando	Descri√ß√£o
        git clone <url>	                                Clona um reposit√≥rio remoto (como o GitHub) para seu computador.
        git remote -v	                                Mostra os reposit√≥rios remotos conectados.
        git remote add origin <url>	                    Conecta seu reposit√≥rio local com um remoto chamado origin.

    üîµ STATUS E MONITORAMENTO
    Comando	Descri√ß√£o
        git status	                                    Mostra quais arquivos foram modificados, adicionados ou est√£o prontos para commit.
        git log	                                        Mostra o hist√≥rico de commits do projeto.
        git diff	                                    Mostra as diferen√ßas entre arquivos modificados e os que est√£o no √∫ltimo commit.

    üü£ ADICIONAR E COMMITAR
    Comando	Descri√ß√£o
        git add <arquivo>	                            Adiciona um arquivo espec√≠fico √† √°rea de prepara√ß√£o (staging).
        git add .	                                    Adiciona todos os arquivos modificados no projeto.
        git commit -m "mensagem"	                    Registra um snapshot do projeto com uma mensagem descritiva.

    üî¥ ENVIAR E ATUALIZAR (PUSH & PULL)
    Comando	Descri√ß√£o
        git push origin main	                        Envia os commits locais para o reposit√≥rio remoto (branch main).
        git pull origin main	                        Baixa as altera√ß√µes do reposit√≥rio remoto e atualiza seu reposit√≥rio local.
        git fetch	                                    Baixa os dados mais recentes do reposit√≥rio remoto sem aplicar (merge) autom√°tico.

    üü§ BRANCHES (RAMIFICA√á√ïES)
    Comando	Descri√ß√£o
        git branch	                                    Lista todas as branches.
        git branch <nome>	                            Cria uma nova branch.
        git checkout <nome>	                            Troca para outra branch existente.
        git checkout -b <nome>	                        Cria e j√° muda para a nova branch.
        git merge <nome>	                            Mescla (merge) uma branch com a atual.
        git branch -d <nome>	                        Exclui uma branch local.

    ‚ö´ DESCARTAR E REVERTER
    Comando	Descri√ß√£o
        git restore <arquivo>	                        Descarta altera√ß√µes n√£o comitadas em um arquivo.
        git reset	                                    Remove arquivos da √°rea de staging.
        git reset --hard	                            Desfaz todas as altera√ß√µes e retorna ao √∫ltimo commit. (perigoso)
        git revert <hash>	                            Reverte um commit espec√≠fico, criando um novo commit que desfaz o anterior.

    ‚ö™ OUTROS COMANDOS √öTEIS
    Comando	Descri√ß√£o
        git stash	                                    Guarda temporariamente altera√ß√µes n√£o comitadas.
        git stash pop	                                Recupera o que foi guardado com git stash.
        git tag	                                        Lista ou cria marcas (tags) em commits espec√≠ficos.
        git blame <arquivo>	                            Mostra linha por linha quem modificou o qu√™ em um arquivo.

#
#
#
#
#
#
#
#
#
#
